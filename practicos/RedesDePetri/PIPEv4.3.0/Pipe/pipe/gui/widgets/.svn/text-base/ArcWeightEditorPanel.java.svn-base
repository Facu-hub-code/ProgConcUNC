package pipe.gui.widgets;

import pipe.gui.ApplicationSettings;
import pipe.gui.PetriNetTab;
import pipe.utilities.Copier;
import pipe.views.ArcView;
import pipe.views.MarkingView;
import pipe.views.PetriNetView;
import pipe.views.TokenView;

import javax.swing.*;
import javax.swing.event.CaretListener;
import java.awt.*;
import java.util.LinkedList;

/**
 * 
 * @author Alex Charalambous
 */
public class ArcWeightEditorPanel extends javax.swing.JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private final ArcView _arcView;
	boolean attributesVisible;

    private final PetriNetTab _view;
	private JRootPane _rootPane;

	/**
	 * Creates new form Arc Weight Editor
     * @param rootPane
     * @param arcView
     * @param _pnmlData
     * @param view
     */
	public ArcWeightEditorPanel(JRootPane rootPane, ArcView arcView,
			PetriNetView _pnmlData, PetriNetTab view) {
		_arcView = arcView;
		_view = view;
		_rootPane = rootPane;

		initComponents();

		this._rootPane.setDefaultButton(okButton);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		inputtedWeights = new LinkedList<JSpinner>();
		inputtedTokenClassNames = new LinkedList<String>();
        LinkedList<TokenView> tokenViews = ApplicationSettings.getApplicationView().getCurrentPetriNetView().getTokenViews();
		java.awt.GridBagConstraints gridBagConstraints;

        JPanel arcEditorPanel = new JPanel();
        JPanel buttonPanel = new JPanel();
        JButton cancelButton = new JButton();
		okButton = new javax.swing.JButton();

		setLayout(new java.awt.GridBagLayout());

		arcEditorPanel.setBorder(javax.swing.BorderFactory
                                         .createTitledBorder("Arc Weight Editor"));
		arcEditorPanel.setLayout(new java.awt.GridBagLayout());
		Dimension d = new Dimension();
		d.setSize(150, 350);
		arcEditorPanel.setPreferredSize(d);
		// Now set new dimension used in for loop below
		d = new Dimension();
		d.setSize(50, 19);
		int x = 0;
		int y = 0;
		LinkedList<MarkingView> weights = _arcView.getWeight();
		for (TokenView tc : tokenViews) {
			if (tc.isEnabled()) {
				JLabel tokenClassName = new JLabel();
				JSpinner tokenClassWeight = new JSpinner();
				inputtedWeights.add(tokenClassWeight);

				tokenClassName.setText(tc.getID() + ": ");
				inputtedTokenClassNames.add(tc.getID());
				gridBagConstraints = new java.awt.GridBagConstraints();
				gridBagConstraints.gridx = x;
				gridBagConstraints.gridy = y;
				gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
				gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
				arcEditorPanel.add(tokenClassName, gridBagConstraints);
				tokenClassWeight.setPreferredSize(d);
				tokenClassWeight.setValue(0);
				for (MarkingView currentWeight : weights) {
					if (tc.hasSameId(currentWeight.getToken())) {
						tokenClassWeight.setValue(currentWeight
								.getCurrentMarking());
					}
				}

				tokenClassWeight
						.addFocusListener(new java.awt.event.FocusAdapter() {
							public void focusGained(
									java.awt.event.FocusEvent evt) {
								nameTextFieldFocusGained(evt);
							}

							public void focusLost(java.awt.event.FocusEvent evt) {
								nameTextFieldFocusLost(evt);
							}
						});
				gridBagConstraints = new java.awt.GridBagConstraints();
				gridBagConstraints.gridx = x + 1;
				gridBagConstraints.gridy = y;
				gridBagConstraints.gridwidth = 3;
				gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
				gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
				arcEditorPanel.add(tokenClassWeight, gridBagConstraints);
				y++;
			}
		}
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		add(arcEditorPanel, gridBagConstraints);
		buttonPanel.setLayout(new java.awt.GridBagLayout());

		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonHandler(evt);
            }
        });
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		buttonPanel.add(cancelButton, gridBagConstraints);

		okButton.setText("OK");
		okButton.setMaximumSize(new java.awt.Dimension(75, 25));
		okButton.setMinimumSize(new java.awt.Dimension(75, 25));
		okButton.setPreferredSize(new java.awt.Dimension(75, 25));
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonHandler(evt);
			}
		});
		okButton.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				okButtonKeyPressed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		buttonPanel.add(okButton, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 8, 3);
		add(buttonPanel, gridBagConstraints);
	}// </editor-fold>//GEN-END:initComponents

	
	private void nameTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_nameTextFieldFocusLost
		// focusLost(nameTextField);
	}// GEN-LAST:event_nameTextFieldFocusLost

	private void nameTextFieldFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_nameTextFieldFocusGained
		// focusGained(nameTextField);
	}// GEN-LAST:event_nameTextFieldFocusGained

	private void okButtonKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_okButtonKeyPressed
		if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
			okButtonHandler(new java.awt.event.ActionEvent(this, 0, ""));
		}
	}// GEN-LAST:event_okButtonKeyPressed

	CaretListener caretListener = new javax.swing.event.CaretListener() {
		public void caretUpdate(javax.swing.event.CaretEvent evt) {
			JTextField textField = (JTextField) evt.getSource();
			textField.setBackground(new Color(255, 255, 255));
			// textField.removeChangeListener(this);
		}
	};

	private void okButtonHandler(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonHandler
		LinkedList<MarkingView> newWeight;
		newWeight = Copier.mediumCopy(_arcView
                                                                    .getWeight());
	    _view.getHistoryManager().newEdit(); // new "transaction""
	    int totalMarking = 0;
		for (int i = 0; i < inputtedWeights.size(); i++) {
			String tokenClassName = inputtedTokenClassNames.get(i);

            int pos = ApplicationSettings.getApplicationView().getCurrentPetriNetView().positionInTheList(tokenClassName,
                                                                                                  newWeight);
			MarkingView m;
			if (pos >= 0) {
				m = newWeight.get(pos);
			} else {
                m = new MarkingView(ApplicationSettings.getApplicationView().getCurrentPetriNetView().getTokenClassFromID(
                        tokenClassName), 0);
				newWeight.add(m);
			}
			int currentMarking = m.getCurrentMarking();


				int newMarking = Integer.valueOf((Integer)inputtedWeights.get(i)
						.getValue());
				if (newMarking < 0) {
					JOptionPane.showMessageDialog(null,
							"Weighting cannot be less than 0. Please re-enter");
					return;
				} else if (newMarking != currentMarking) {
					m.setCurrentMarking(newMarking);
				}
				totalMarking += newMarking;
/*			} catch (NumberFormatException nfe) {
				JOptionPane.showMessageDialog(null,
						"Please enter a positive integer greater than 0.",
						"Invalid entry", JOptionPane.ERROR_MESSAGE);
				return;
			} catch (Exception exc) {
				exc.printStackTrace();
				JOptionPane.showMessageDialog(null,
						"Please enter a positive integer greater than 0.",
						"Invalid entry", JOptionPane.ERROR_MESSAGE);
				return;
			}
*/		}
		if(totalMarking <= 0){
			JOptionPane.showMessageDialog(null,
					"Total weight of arc must be greater than 0. Please re-enter");
			return;
		}
        ApplicationSettings.getApplicationView().getCurrentTab().getHistoryManager().addEdit(
				_arcView.setWeight(newWeight));
		
		_arcView.repaint();
		exit();
	}

	/*
	 * 
	 * _view.getHistoryManager().newEdit(); // new "transaction"" String newName =
	 * "";//nameTextField.getText(); if (!newName.equals(name)) { if
	 * (_pnmlData.checkTransitionIDAvailability(newName)) {
	 * _view.getHistoryManager().addEdit(arc.setPNObjectName(newName)); } else { //
	 * aquest nom no est disponible... JOptionPane.showMessageDialog(null,
	 * "There is already a transition named " + newName, "Error",
	 * JOptionPane.WARNING_MESSAGE); return; } }
	 */

	// GEN-LAST:event_okButtonHandler

	private void exit() {
		_rootPane.getParent().setVisible(false);
	}

	private void cancelButtonHandler(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonHandler
		// Provisional!
		exit();
	}// GEN-LAST:event_cancelButtonHandler

    private javax.swing.JButton okButton;
    private LinkedList<JSpinner> inputtedWeights;
	private LinkedList<String> inputtedTokenClassNames;
	// End of variables declaration//GEN-END:variables

}
